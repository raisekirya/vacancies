import asyncio
import logging

from aiogram import Bot, Dispatcher

from config import BOT_TOKEN
from database.database import create_tables
from handlers import routers

logging.basicConfig(
    level=logging.INFO
)


async def set_descriptions(bot: Bot):
    await bot.set_my_description("""
–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç ? –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Åü§ù

–í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –∫–æ–º–ø–∞–Ω–∏—é –ø–æ –Ω–∞–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –≤ –ù–æ—Ä–≤–µ–≥–∏—é üá≥üá¥

üíº –ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∞–∫–∞–Ω—Å–∏–π:

üë∑ –°—Ç—Ä–æ–∏—Ç–µ–ª–∏
üåø –†–∞–±–æ—Ç–Ω–∏–∫–∏ —Ç–µ–ø–ª–∏—Ü
üè® –ü–µ—Ä—Å–æ–Ω–∞–ª –æ—Ç–µ–ª–µ–π
üöö –í–æ–¥–∏—Ç–µ–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ B
üì¶ –£–ø–∞–∫–æ–≤—â–∏–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥ 
üîí –†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–µ
üí∂ –í—ã—Å–æ–∫–∞—è –æ–ø–ª–∞—Ç–∞ —Ç—Ä—É–¥–∞ 

–î–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –ø–æ –∫–Ω–æ–ø–∫–µ —Å–Ω–∏–∑—Éüëá –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start
    """)

    await bot.set_my_short_description(
        "üá≥üá¥ –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –≤ –ù–æ—Ä–≤–µ–≥–∏–∏. –ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∞–∫–∞–Ω—Å–∏–π, –∂–∏–ª—å—ë –∏ –ø–∏—Ç–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω—ã"
    )


async def main():
    await create_tables()

    bot = Bot(BOT_TOKEN)
    dp = Dispatcher()

    dp.include_routers(*routers)

    await set_descriptions(bot)
    await bot.delete_webhook(drop_pending_updates=True)

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
